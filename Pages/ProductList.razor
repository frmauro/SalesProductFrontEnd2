@page "/productlist"
@inject HttpClient Http
@inject NavigationManager NavigationManager;
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration

<PageTitle>Product List</PageTitle>

<button @onclick="Navigate">Create Product</button>

<h1>Products</h1>


@if (products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Description</th>
            <th>Amount</th>
            <th>Price</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in products)
            {
                <tr>
                    <td>@product.Id</td>
                    <td>@product.Description</td>
                    <td>@product.Amount</td>
                    <td>@product.Price</td>
                    <td>@product.Status</td>
                    <td><button @onclick="@(() => Edit(product.Id))">Editar</button></td>
                </tr>
            }
        </tbody>
    </table>
}


@code {

    private string urlapi = string.Empty;//"http://localhost:5000";
    protected override void OnInitialized()
    {
        this.urlapi = Configuration.GetSection("urlapi").Value;
    }

    private Product[]? products;

    protected override async Task OnInitializedAsync()
    {
        products = await Http.GetFromJsonAsync<Product[]>($"{urlapi}/GetAllProduct");
    }

    void Navigate()
    {
        NavigationManager.NavigateTo("createproduct");
    }

    void Edit(int id)
    {
        NavigationManager.NavigateTo($"editproduct/{id}");
    }
}