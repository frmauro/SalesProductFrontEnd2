@page "/createproduct"
@inject HttpClient Http
@using System.Text
@using System.Text.Json
@using static System.Net.Mime.MediaTypeNames
@using  System.Text.Json.Serialization

<PageTitle>Create</PageTitle>

<h1>Create Product</h1>

<EditForm Model="@product" OnValidSubmit="@HandleValidSubmit" >
    <DataAnnotationsValidator /> 
    <ValidationSummary />

    <p>
        <label for="description">Description: </label>
        <InputText id="description" @bind-Value="product.Description" />
         <ValidationMessage For="() => product.Description" /> 
    </p>
    <p>
        <label for="amount">Amount: </label>
        <InputNumber id="amount" @bind-Value="product.Amount" />
         <ValidationMessage For="() => product.Amount" /> 
    </p>
    <p>
        <label for="price">Price: </label>
        <InputNumber id="price" @bind-Value="product.Price" />
         <ValidationMessage For="() => product.Price" /> 
    </p>
    <p>
        <label for="classification">Status: </label>
        <InputSelect id="status" @bind-Value="product.Status">
            <option value="">Select classification ...</option>
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </InputSelect>
         <ValidationMessage For="() => product.Status" /> 
    </p>

    <button type="submit">Save</button>
</EditForm>


@code{
    public class ProductVm
    {
        public int Id { get; set; }
        public string Description { get; set; }
        public int Amount { get; set; }
        public decimal Price { get; set; }
        public string Status { get; set; }
    }
    private Product product = new Product();

 private async void HandleValidSubmit(){
    //save the data
     @* var productItemJson = new StringContent(
        JsonSerializer.Serialize(product),
        Encoding.UTF8,
        Application.Json); // using static System.Net.Mime.MediaTypeNames;  *@

        var options = new JsonSerializerOptions
        {
            NumberHandling = JsonNumberHandling.WriteAsString | JsonNumberHandling.AllowNamedFloatingPointLiterals
        };

        // create request object
        var request = new HttpRequestMessage(HttpMethod.Post, "http://localhost/product");

        var postBody = new ProductVm() { Id = 0, Description = product.Description, Amount = product.Amount, Price = product.Price, Status = product.Status };
        var json = JsonSerializer.Serialize(postBody);
        request.Content = new StringContent(json, Encoding.UTF8, "application/json");

    using var response = await Http.SendAsync(request); 

    var data = await response.Content.ReadFromJsonAsync<Product>();

    //product = await httpResponse.Content.ReadFromJsonAsync<Product>();
} 
    
}