@page "/createproduct"
@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json

<PageTitle>Create</PageTitle>

<h1>Create Product</h1>

<EditForm Model="@product" OnValidSubmit="@HandleValidSubmit" >
    <DataAnnotationsValidator /> 
    <ValidationSummary />

    <p>
        <label for="description">Description: </label>
        <InputText id="description" @bind-Value="product.Description" />
         <ValidationMessage For="() => product.Description" /> 
    </p>
    <p>
        <label for="amount">Amount: </label>
        <InputNumber id="amount" @bind-Value="product.Amount" />
         <ValidationMessage For="() => product.Amount" /> 
    </p>
    <p>
        <label for="price">Price: </label>
        <InputNumber id="price" @bind-Value="product.Price" />
         <ValidationMessage For="() => product.Price" /> 
    </p>
    <p>
        <label for="classification">Status: </label>
        <InputSelect id="status" @bind-Value="product.Status">
            <option value="">Select classification ...</option>
            <option value="Active">Active</option>
            <option value="Inactive">Inactive</option>
        </InputSelect>
         <ValidationMessage For="() => product.Status" /> 
    </p>

    <button type="submit">Save</button>
</EditForm>


@code{
    public class ProductVm
    {
        public int Id { get; set; }
        public string Description { get; set; }
        public int Amount { get; set; }
        public decimal Price { get; set; }
        public string Status { get; set; }
    }
    private Product product = new Product();
    private string? responseBody;

 private async void HandleValidSubmit(){

        var requestMessage = new HttpRequestMessage()
                {
                    Method = new HttpMethod("POST"),
                    RequestUri = new Uri("http://localhost/product"),
                    Content =
                        JsonContent.Create(new 
                        { id = 0, description = product.Description, amount = product.Amount, price = product.Price.ToString(), status = product.Status })
                };

            var response = await Http.SendAsync(requestMessage);
            var responseStatusCode = response.StatusCode;
            responseBody = await response.Content.ReadAsStringAsync();

} 
    
}